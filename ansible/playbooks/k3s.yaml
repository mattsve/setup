- name: Build a k3s cluster
  hosts: k3s_nodes
  vars:
    k3s_become: true
    k3s_release_version: v1.19.16+k3s1
    k3s_server:
      cluster-cidr: 172.31.0.0/16
      service-cidr: 172.30.0.0/16
      cluster-dns: '172.30.0.10'
      flannel-backend: 'vxlan'
      disable:
       - servicelb
  tasks:
    - name: clean inventory.txt
      become: yes
      file:
        path: /tmp/inventory.txt
        state: absent
    - name: copy manifests
      when: k3s_control_node is defined and
            k3s_control_node == True
      become: yes
      block:
        - name: create rancher directory
          ansible.builtin.file:
            path: /var/lib/rancher/
            state: directory
            mode: '0755'
        - name: create manifests directory
          ansible.builtin.file:
            path: /var/lib/rancher/k3s/server/manifests/
            state: directory
            mode: '0700'
        - name: copy traefik config
          copy:
            src: k3s/traefik-config.yaml
            dest: /var/lib/rancher/k3s/server/manifests/traefik-config.yaml
            mode: '0644'
      
    - name: create /k3s-storage
      become: yes
      block:
        - name: crete with zfs
          when: zpool_storage is defined
          community.general.zfs:
            name: '{{ zpool_storage }}/k3s-storage'
            state: present
            extra_zfs_properties:
                mountpoint: /k3s-storage
        - name: create ordinary folder
          when: zpool_storage is not defined
          ansible.builtin.file:
            path: /k3s-storage
            state: directory
            mode: '0755'
        - name: partition disk
          when: disk_storage is defined
          block:
            - name: partition disk
              community.general.parted:
                device: "{{ disk_storage }}"
                fs_type: ext4
                label: gpt
                name: primary
                number: 1
                state: present
            - name: make filesystem
              community.general.filesystem:
                dev: "{{ disk_storage }}1"
                fstype: ext4
            - name: mount disk
              ansible.posix.mount:
                boot: true
                dump: '0'
                fstype: ext4
                passno: '2'
                path: /k3s-storage
                src: "{{ disk_storage }}1"
                state: mounted
            
    - name: k3s-role
      import_role:
        name: xanmanning.k3s