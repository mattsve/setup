- hosts: octoprint
  become: true
  tasks:
    - name: install packages
      package:
        name:
          - python3-virtualenv
          - python3-pip
          - python3-dev
          - haproxy
          - ffmpeg
          - avrdude
        state: present    

    - name: Add octoprint user
      user:
        name: octoprint
        groups: tty,dialout
        password_lock: true

    - name: octoprint user sudo no pwd
      ansible.builtin.lineinfile:
          path: /etc/sudoers.d/nopassword
          line: 'octoprint ALL=(ALL) NOPASSWD: /usr/bin/systemctl poweroff,/usr/bin/systemctl reboot,/usr/bin/systemctl restart octoprint,/usr/bin/vcgencmd get_throttled'
          create: true
          owner: root
          mode: 0644
          state: present
    - name: Install octoprint
      pip:
        name: octoprint
        virtualenv: ~/venv
      become_user: octoprint

    - name: Start octoprint
      block:
        - name: Copy service
          copy: 
            src: octoprint/octoprint.service
            dest: /etc/systemd/system/octoprint.service
            owner: root
            group: root
            mode: '0644'
        - name: Enable service
          systemd:
            name: octoprint
            state: started
            enabled: true
    
    - name: HAProxy
      block:
        - name: Copy config
          copy:
            src: octoprint/haproxy.cfg
            dest: /etc/haproxy/haproxy.cfg
            owner: root
            group: root
            mode: '0644'
        - name: Enable service
          systemd:
            name: haproxy
            state: started
            enabled: true

    - name: Enable camera
      block:
        - name: start-x
          lineinfile:
            path: /boot/firmware/config.txt
            line: start_x=1
            state: present
          notify: reboot
        - name: gpu-mem
          lineinfile:
            path: /boot/firmware/config.txt
            line: gpu_mem=128
            state: present
          notify: reboot
        - name: packages
          package:
            name:
              - libraspberrypi-bin
    
    - name: mjpg-streamer
      block:
        - name: install mjpg-streamer
          community.general.snap:
            name:
              - mjpg-streamer
        - name: allow mjpg-streamer access to camera
          command: snap connect mjpg-streamer:camera
        - name: enable mjpg-streamer daemon
          ansible.builtin.lineinfile:
            path: /var/snap/mjpg-streamer/current/config
            line: DAEMON="true"
            state: present
            regexp: '^DAEMON='
        - name: start mjpg-streamer
          command: snap restart mjpg-streamer
  handlers:
    - name: reboot
      reboot: