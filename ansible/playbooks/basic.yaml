- hosts: all
  become: true
  tasks:
    - name: install mosh
      package:
        name: mosh
        state: present
    
    - name: Test for raspberry pi /proc/cpuinfo
      command: grep -E "Raspberry Pi|BCM2708|BCM2709|BCM2835|BCM2836" /proc/cpuinfo
      register: grep_cpuinfo_raspberrypi
      failed_when: false
      changed_when: false

    - name: Test for raspberry pi /proc/device-tree/model
      command: grep -E "Raspberry Pi" /proc/device-tree/model
      register: grep_device_tree_model_raspberrypi
      failed_when: false
      changed_when: false

    - name: Set raspberry_pi fact to true
      set_fact:
        raspberry_pi: true
      when:
        grep_cpuinfo_raspberrypi.rc == 0 or grep_device_tree_model_raspberrypi.rc == 0

    - name: check for poe hat
      block:
        - name: checking for cooling device
          stat:
            path: /sys/class/thermal/cooling_device0/type
          register: stat_result
        - name: gathering facts about cooling device
          when: stat_result.stat.exists
          slurp:
            src: /sys/class/thermal/cooling_device0/type
          register: cooling_device
      ignore_errors: true    
    
    - name: install fan rules for poe hat
      when: cooling_device.skipped is not defined and
            cooling_device.content | b64decode | trim == 'rpi-poe-fan'
            and ansible_facts['distribution'] == 'Ubuntu' 
            and ansible_facts['distribution_major_version'] == '20'
      block:
        - name: copy udev rule file
          copy:
            src: '50-rpi-fan.rules'
            dest: '/etc/udev/rules.d/50-rpi-fan.rules'
            mode: 'u=rw,go=r'
          register: result
        - name: reload udev rules
          when: result is changed
          shell:
            cmd: 'udevadm control --reload-rules && udevadm trigger'
            
    - name: Enable cgroup via boot commandline if not already enabled for Ubuntu on a Raspberry Pi
      when: ansible_facts['distribution'] == 'Ubuntu' and raspberry_pi | default(false)
      lineinfile:
        path: /boot/firmware/cmdline.txt
        backrefs: yes
        regexp: '^((?!.*\bcgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory\b).*)$'
        line: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'
      notify: reboot

    - name: setup rsyslog
      copy:
        src: '05-graylog.conf'
        dest: '/etc/rsyslog.d/05-graylog.conf'
        mode: 'u=rw,go=r'
      notify: rsyslog

  handlers:
    - name: reboot
      reboot:
    - name: rsyslog
      service:
        name: rsyslog
        state: restarted